# DaVinciCTF 20200
# Challenge: mine-game
# Python script to create the input string from the mine array dynamically extracted with the debugger

mine_array =   [0x00000001, 0x00000001, 0x00000001, 0x00000000, 0x00000001, 0x00000001, 0x00000001, 0x00000001, 0x00000001, 0x00000001, 0x00000001, 0x00000001, 0x00000001, 0x00000000, 0x00000001, 0x0000002a, 0x00000001, 0x00000000, 0x00000001, 0x0000002a, 0x00000001, 0x00000001, 0x0000002a, 0x00000001, 0x00000001, 0x0000002a, 0x00000001, 0x00000000, 0x00000001, 0x00000002, 0x00000002, 0x00000002, 0x00000002, 0x00000002, 0x00000001, 0x00000002, 0x00000002, 0x00000002, 0x00000001, 0x00000002, 0x00000002, 0x00000001, 0x00000000, 0x00000001, 0x0000002a, 0x00000003, 0x0000002a, 0x00000001, 0x00000000, 0x00000001, 0x0000002a, 0x00000001, 0x00000000, 0x00000001, 0x0000002a, 0x00000002, 0x00000001, 0x00000002, 0x00000002, 0x0000002a, 0x00000002, 0x00000001, 0x00000001, 0x00000002, 0x00000002, 0x00000001, 0x00000000, 0x00000001, 0x00000001, 0x00000002, 0x0000002a, 0x00000002, 0x00000002, 0x00000002, 0x00000001, 0x00000000, 0x00000001, 0x0000002a, 0x00000001, 0x00000001, 0x00000001, 0x00000001, 0x00000000, 0x00000001, 0x00000001, 0x00000002, 0x0000002a, 0x00000002, 0x00000001, 0x00000000, 0x00000001, 0x00000001, 0x00000001, 0x00000001, 0x0000002a, 0x00000001, 0x00000001, 0x00000001, 0x00000001, 0x00000001, 0x00000003, 0x0000002a, 0x00000002, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000001, 0x00000002, 0x00000002, 0x00000002, 0x0000002a, 0x00000001, 0x00000000, 0x00000002, 0x0000002a, 0x00000002, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000001, 0x0000002a, 0x00000002, 0x00000001, 0x00000001, 0x00000001, 0x00000002, 0x00000002, 0x00000001, 0x00000001, 0x00000001, 0x00000001, 0x00000000, 0x00000000, 0x00000001, 0x00000001, 0x00000001, 0x00000000, 0x00000000, 0x00000001, 0x0000002a, 0x00000001, 0x00000000, 0x00000001, 0x0000002a, 0x00000002, 0x00000002, 0x00000002, 0x00000001, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000001, 0x00000001, 0x00000001, 0x00000000, 0x00000001, 0x00000001, 0x00000003, 0x0000002a, 0x0000002a, 0x00000001, 0x00000000, 0x00000000, 0x00000001, 0x00000001, 0x00000002, 0x00000001, 0x00000001, 0x00000001, 0x00000001, 0x00000001, 0x00000002, 0x0000002a, 0x00000003, 0x00000001, 0x00000000, 0x00000000, 0x00000001, 0x0000002a, 0x00000002, 0x0000002a, 0x00000001, 0x00000001, 0x0000002a, 0x00000001, 0x00000001, 0x00000001, 0x00000001, 0x00000000, 0x00000000, 0x00000000, 0x00000001, 0x00000000, 0x00000000, 0x00000000, 0x00000000]

sol = []
for i, e in enumerate(mine_array):
    if e != 42:
        sol.append(i)


sol = sol[:171]

print(f"len(sol): {len(sol)}")
# print(f"sol: {sol}")

print(";".join([str(t) for t in sol]))